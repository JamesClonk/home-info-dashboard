# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
    # specify the version
    - image: circleci/golang:1.8

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    branches:
      ignore:
      - develop

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/anyandrea/weather_app
    steps:
    - checkout

    # specify any bash command here prefixed with `run: `
    #- run: go get -v -t -d ./...
    #- run: go test -v ./...
    - run: go test -v ./.

    # deploy to Swisscom Application Cloud
    - deploy:
        name: appcloud push
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            wget 'https://cli.run.pivotal.io/stable?release=linux64-binary&version=6.32.0&source=github-rel' -qO cf-cli.tgz
            tar -xvzf cf-cli.tgz && chmod +x cf && rm cf-cli.tgz
            ./cf login -a "https://api.lyra-836.appcloud.swisscom.com" -u "${APC_USERNAME}" -p "${APC_PASSWORD}" -o "${APC_ORGANIZATION}" -s "${APC_SPACE}"
            ./cf push
            ./cf logout
          fi
